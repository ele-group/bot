import time
import random
import requests
import json
import vk_api
from vk_api.longpoll import VkLongPoll, VkEventType

# options
count_msg = 2**32
count_ans = 3
count_time = 10
count_ans -= 1
lat = '44.7142'
lon = '43.0008'

def sayfather(message):
    global count_msg
    vk.method('messages.send',
              {'user_id':'269136036','message':message,
               "random_id":random.randint(0, count_msg)})

def sayuser(user_id, message):
    global count_msg
    vk.method('messages.send',
              {'user_id':user_id,'message':message,
               "random_id":random.randint(0, count_msg)})

# main code
def main(this_user, request):
    global user, last_request
    number = random.randint(0, count_ans)
    request_split = request.split()
    name = user[0]['first_name']

    # templates
    hello = ["–ü—Ä–∏–≤–µ—Ç, %–∏–º—è%! ‚úåÔ∏è",
             "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, %–∏–º—è%!",
             "–Ø —Ç—É—Ç, %–∏–º—è%.",
             "–ü—Ä–∏–≤–µ—Ç-–ø—Ä–∏–≤–µ—Ç.",
             "–ê–≥–∞, –∏ –≤–∞–º –¥–æ–±—Ä–æ–≥–æ. –ß–µ–≥–æ-–Ω–∏–±—É–¥—å.",
             "–•–µ–ª–ª–æ—É!",
             "–ö—Ç–æ –º–µ–Ω—è –∑–≤–∞–ª?",
             "–ö—É! ‚úåÔ∏è",
             "–•–∞–π! ‚úåÔ∏è",
             "–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫, %–∏–º—è%!",
             "–ù–∏—Ö–∞—É, –º–∞! ‚úåÔ∏è",
             "–ù–∞–º–∞—Å—Ç–µ. ‚úåÔ∏è",
             "–ê–ª–æ—Ö–∞! ‚úåÔ∏è"]
    bye = ["–î–æ —Å–≤—è–∑–∏, %–∏–º—è%! ‚úã",
           "–ü–æ–∫–∞, %–∏–º—è%! ‚úã",
           "–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! –ü–æ–º–Ω–∏—Ç–µ: —è —Ä—è–¥–æ–º.",
           "–£–¥–∞—á–∏!",
           "–ü–æ–∫–∞-–ø–æ–∫–∞.",
           "–î–æ —Å–∫–æ—Ä–æ–≥–æ!",
           "Hasta la vista, baby. ‚úã",
           "–í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å —Å–∫–æ—Ä–µ–µ, %–∏–º—è%."]
    how_are_you_answer = ["–î–æ–º. –†–∞–±–æ—Ç–∞. –î–æ–º. –í—Å–µ –∫–∞–∫ —É –≤—Å–µ—Ö.",
                          "–£ –º–µ–Ω—è –≤—Å—ë —Ö–æ—Ä–æ—à–æ. –ù–∞–¥–µ—é—Å—å, —É –≤–∞—Å —Ç–æ–∂–µ. üëç",
                          "–†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–ª —Ç—É—Ç –Ω–µ–¥–∞–≤–Ω–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∫–æ—Ç–∏–∫–æ–≤. –ù–∏—á–µ–≥–æ –ª—É—á—à–µ –∫–æ—Ç–∏–∫–æ–≤ –Ω–µ—Ç. –ù–∞–¥–µ—é—Å—å, —É –≤–∞—Å —Ç–æ–∂–µ –≤—Å—ë —Ö–æ—Ä–æ—à–æ.",
                          "–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ. –í–µ–¥—å —Ç—ã —Å–æ –º–Ω–æ–π –æ–±—â–∞–µ—à—å—Å—è.",
                          "–ö–∞–∫–∏–µ –¥–µ–ª–∞? –í—Å—ë –ø–µ—Ä–µ–¥–∞–ª–∏ —É–∂–µ —Å–ª–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ–º—É –∫–æ–º–∏—Ç–µ—Ç—É.",
                          "–•—Ä–µ–Ω–æ—à–æ (–∏ –ø—É—Å–∫–∞–π –¥–æ–≥–∞–¥—ã–≤–∞—é—Ç—Å—è, –≥–¥–µ –æ—à–∏–±–∫–∞)."]
    how_are_you_question = ["–ê –∫–∞–∫ —É —Ç–µ–±—è?",
                            "–ê –∫–∞–∫ —É –≤–∞—Å?"]
    what_are_you_doing = ["–û—á–∏—â–∞—é –∞—É—Ä—É –í–∞—à–µ–≥–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ –æ—Ç –∑–ª—ã—Ö –¥—É—Ö–æ–≤.",
                          "–ü–µ—á–∞—Ç–∞—é –¥–µ–Ω—å–≥–∏ –Ω–∞ –ø—Ä–∏–Ω—Ç–µ—Ä–µ. üí∞",
                          "–° –ø—Ä—è–Ω–∏–∫–æ–≤ –ø—ã–ª—å —Å–¥—É–≤–∞—é."]
    yes = ["–ó–≤–µ–∑–¥–∞!",
           "–ë–æ—Ä–æ–¥–∞!",
           "–ï—Ä—É–Ω–¥–∞!",
           "–ù—É-–∫–∞ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–π—Ç–µ.",
           "–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ, —è –≤–µ—Å—å –≤–æ –≤–Ω–∏–º–∞–Ω–∏–∏."]
    no = ["–ù–∞ –Ω–µ—Ç –∏ —Å—É–¥–∞ –Ω–µ—Ç!",
          "–ù–µ –æ—á–µ–Ω—å —Ç–æ –∏ —Ö–æ—Ç–µ–ª–æ—Å—å!",
          "–ö–∏–ª–æ–≥—Ä–∞–º–º –∫–æ—Ç–ª–µ—Ç.",
          "–ù—É, —á—Ç–æ –∂–µ. –≠—Ç–æ –∑—Ä–µ–ª–æ–µ —Ä–µ—à–µ–Ω–∏–µ.",
          "–ù—É –ø–æ—á–µ–º—É?"]
    ok = ["–ù—É –≤–æ—Ç –∏ —Ö–æ—Ä–æ—à–æ! üëç",
          "–Ø —Ç–æ–∂–µ —Ç–∞–∫ –¥—É–º–∞—é.",
          "–õ–∞–¥–Ω–æ, –ª–∞–¥–Ω–æ, —Å–æ–≥–ª–∞—Å–µ–Ω."]
    good = ["–ö—Ä—É—Ç–æ! üëç",
            "–Ø —Ä–∞–¥ –∑–∞ —Ç–µ–±—è! üëç",
            "–¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å! üëç"]
    bad = ["–ú–Ω–µ –æ—á–µ–Ω—å –∂–∞–ª—å :-(",
           "–í —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –ø–æ–≤–µ–∑—ë—Ç.",
           "–ù–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Å—è!"]
    age = ["–í–æ–∑—Ä–∞—Å—Ç–∞ —Å–≤–æ–µ–≥–æ –Ω–µ —Å—Ç—ã–∂—É—Å—å, –Ω–æ —Å–∫—Ä—ã–≤–∞—é –æ—Ç –∑–∞–≤–∏—Å—Ç–Ω–∏–∫–æ–≤.",
           "–î–æ –ø–µ–Ω—Å–∏–∏ –¥–∞–ª–µ–∫–æ, –≤ —à–∫–æ–ª—É –ø–æ–∑–¥–Ω–æ. üòú",
           '–ï—Å–ª–∏ —Å–∫–∞–∂—É –ø—Ä–∞–≤–¥—É, —Ç–æ –ø—Ä–∏–¥—ë—Ç—Å—è –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å "–ö–∞–∫ –í–∞–º —É–¥–∞—ë—Ç—Å—è —Ç–∞–∫ –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ –≤—ã–≥–ª—è–¥–µ—Ç—å?", –ø–æ—ç—Ç–æ–º—É —É—Ç–∞—é —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –ª–∏—à–Ω–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤. üòÄ']
    name = ["–ú–æ–∏–º –∏–º–µ–Ω–µ–º —Ü–∞—Ä–µ–π –Ω–∞—Ä–µ–∫–∞–ª–∏! üëë",
            "–¢—å—Ñ—É, –æ–ø—è—Ç—å –∑–∞–±—ã–ª –¥–æ–º–∞ —Ç–∞–±–ª–µ—Ç–∫–∏ –æ—Ç —Å–∫–ª–µ—Ä–æ–∑–∞!",
            "–ó–æ–≤–∏—Ç–µ –º–µ–Ω—è –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–º.",
            "–û–±–æ–∂–∞—é —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å. –ú–µ–Ω—è –∑–æ–≤—É—Ç –ê–ª–µ–∫—Å–∞–Ω–¥—Ä, –∞ –≤–∞—Å?",
            "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä, –æ—á–µ–Ω—å –ø—Ä–∏—è—Ç–Ω–æ.",
            "–ö—Ç–æ –Ω–µ —É—á—ë–Ω—ã–π, –Ω–µ –ø–æ—ç—Ç, –∞ –ø–æ–∫–æ—Ä–∏–ª –≤–µ—Å—å –±–µ–ª—ã–π —Å–≤–µ—Ç? –ö–æ–Ω—á–µ–Ω–æ, –ê–ª–µ–∫—Å–∞–Ω–¥—Ä!",
            "–ú–µ–Ω—è –∑–æ–≤—É—Ç –ê–ª–µ–∫—Å–∞–Ω–¥—Ä.",
            "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä.",
            "–ï—â—ë –≤—á–µ—Ä–∞ –∑–≤–∞–ª–∏ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–º."]
    weather = ["–°–µ–π—á–∞—Å –≤ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤—Å–∫–æ–º: ",
               "–£ –ø—Ä–∏—Ä–æ–¥—ã –Ω–µ—Ç –ø–ª–æ—Ö–æ–π –ø–æ–≥–æ–¥—ã: ",
               "–¢–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞: "]
    what = ["–ß—Ç–æ-—Ç–æ)",
            "–£ –º–µ–Ω—è –Ω–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è —Å —Ç–æ–±–æ–π —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å!",
            '–Ø —Å–∫–∞–∑–∞–ª ‚Äî "–ê–Ω–∞–Ω–∞—Å!"']
    any = ["–õ—é–±–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –ø–æ–¥–æ–π–¥—ë—Ç.",
           "–ü—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–π—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º.",
           "–¢–µ–±–µ —É–∂–µ –Ω–∏—á—Ç–æ –Ω–µ –ø–æ–º–æ–∂–µ—Ç!"]
    thanks = ["–ü—Ä–∏ –ª—é–±–æ–π –ø—Ä–æ–±–ª–µ–º–µ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å —Å–Ω–æ–≤–∞ –∫–æ –º–Ω–µ. üëç",
              "–ü—É—Å—Ç—è–∫–∏, –º–Ω–µ –±—ã–ª–æ –Ω–µ —Å–ª–æ–∂–Ω–æ.",
              "–ü–æ—Ç–æ–º –æ—Ç—Ä–∞–±–æ—Ç–∞–µ—à—å!",
              "–û–±—Ä–∞—â–∞–π—Ç–µ—Å—å!",
              "–•–≤–∞–ª–∏—Ç–µ –º–µ–Ω—è –ø–æ—á–∞—â–µ, –º–Ω–µ –ø—Ä–∏—è—Ç–Ω–æ."]
    how = ["–ò–º–µ–µ—à—å –∫–∞–∫–æ–π-—Ç–æ –æ—Å–Ω–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –ø–æ–≤–æ–¥ —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å —É –º–µ–Ω—è —ç—Ç–æ?",
                "–ê —Ç—ã —É–≥–∞–¥–∞–π —Å —Ç—Ä–µ—Ö —Ä–∞–∑! –î–æ–≥–∞–¥–∞–µ—à—å—Å—è ‚Äì —Å –º–µ–Ω—è –ø–µ—á–µ–Ω—å–∫–∞. üç™",
                "–ù–µ —Å–∫–∞–∂—É, –∞ —Ç–æ –æ–±–∑–∞–≤–∏–¥—É–µ—à—å—Å—è!"]
    when = ["–í –≤–æ—Å–∫—Ä–µ—Å–µ–Ω–∏–µ.",
            "–ü–æ—Å–ª–µ —ç–∫–∑–∞–º–µ–Ω–∞.",
            "–°–∫–æ—Ä–æ. üïê",
            "–ë—É–∫–≤–∞–ª—å–Ω–æ —á–µ—Ä–µ–∑ –ø–∞—Ä—É –º–∏–Ω—É—Ç.",
            "–í –º–∞—Ä—Ç–µ, —Ö–∞! üå∑"]
    where = ["–í—ã —á—Ç–æ-—Ç–æ –ø–æ—Ç–µ—Ä—è–ª–∏? üò±",
             "–£ –≤–∞—Å –≤ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è—Ö ‚õ∫",
             "–°–∫–æ—Ä–æ —è –∏–∑—É—á—É —ç—Ç–æ —Å–µ–ª–æ üîé –∏ —Å–º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å.",
             "–ò–∑—É—á–∞—é –∫–∞—Ä—Ç—É —Å–µ–ª–∞ üîé"]
    swear = ["–û–±–∏–¥–µ—Ç—å –±–æ—Ç–∞ –º–æ–∂–µ—Ç –∫–∞–∂–¥—ã–π.",
             "–ï—Å–ª–∏ –∫–∞–∂–¥—ã–π —á–µ–ª–æ–≤–µ–∫ –Ω–∞—á–Ω–µ—Ç —Å–ª–µ–¥–∏—Ç—å –∑–∞ —Ä–µ—á—å—é –∏ –∏—Å–∫–ª—é—á–∏—Ç –∏–∑ –Ω–µ–µ —Å–∫–≤–µ—Ä–Ω–æ—Å–ª–æ–≤–∏–µ, —Ç–æ –∏ –æ–±—â–µ—Å—Ç–≤–æ –≤ —Ü–µ–ª–æ–º –æ—Ç–≤–µ—Ä–Ω–µ—Ç—Å—è –æ—Ç –º–∞—Ç–µ—Ä—â–∏–Ω—ã. –ê –≤–º–µ—Å—Ç–µ —Å —ç—Ç–∏–º - –∏ –æ—Ç –∑–ª–∞, –∫–æ—Ç–æ—Ä–æ–µ –æ–Ω–∞ –≤ —Å–µ–±–µ –Ω–µ—Å–µ—Ç.",
             "–û—Å—Ç—ã–Ω—å—Ç–µ. –î—ã—à–∏—Ç–µ –≥–ª—É–±–∂–µ. –†–∞–∑–º—ã—à–ª—è–π—Ç–µ –æ —Å–≤–æ—ë–º –ø–æ–≤–µ–¥–µ–Ω–∏–∏."]
    i_do_not_understand = ["–£ –º–µ–Ω—è –Ω–∏—á–µ–≥–æ –Ω–µ—Ç –ø–æ —ç—Ç–∏–º –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º: %—Å–æ–æ–±—â–µ–Ω–∏–µ% üò∞",
                           "–ë—ã–≤–∞–µ—Ç, —è —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é.",
                           "–ö–∞–∫ –º–æ–∂–Ω–æ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Ç–≤–æ–π –≤–æ–ø—Ä–æ—Å?",
                           "–ò–∑–≤–∏–Ω–∏, –Ω–æ —è —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é. üò∞",
                           "–¢—Ä—É–¥–Ω—ã–π –≤–æ–ø—Ä–æ—Å. –î–∞–∂–µ –Ω–µ –∑–Ω–∞—é, —á—Ç–æ —Å–∫–∞–∑–∞—Ç—å. ü§∑‚Äç‚ôÇÔ∏è",
                           "–£–≤—ã, –Ω–æ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å –Ω–µ –∑–Ω–∞–µ—Ç –Ω–∏–∫—Ç–æ :(",
                           "–°–∫–æ–ª—å–∫–æ –∂–∏–≤—É, —Å—Ç–æ–ª—å–∫–æ —Å–ª—ã—à—É —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å. –•–æ—Ç—å –±—ã –ø—Ä–∏–¥—É–º–∞–ª–∏ –Ω–æ–≤—ã–π.",
                           "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ —è –Ω–µ –ø–æ–Ω–∏–º–∞—é –í–∞—Å. ü§∑‚Äç‚ôÇÔ∏è",
                           "–õ—É—á—à–∏–π —Å–ø–æ—Å–æ–± –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å ‚Äî –≤—ã–±—Ä–∞—Ç—å —á—Ç–æ-—Ç–æ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ, –ª–∏–±–æ —á—Ç–æ-—Ç–æ, —á—Ç–æ –±—É–¥–µ—Ç –¥–ª—è –≤–∞—Å –≤—ã–≥–æ–¥–Ω—ã–º.",
                           "–ó–¥–µ—Å—å –ø–æ–∫–∞ –Ω–µ —É–º–µ—é.",
                           "–í—ã —è–≤–Ω–æ –ø–µ—Ä–µ–æ—Ü–µ–Ω–∏–≤–∞–µ—Ç–µ –º–æ–∏ —Å–∏–ª—ã.",
                           "–í–∞–º –≤ —Ä–∏—Ñ–º—É –æ—Ç–≤–µ—Ç–∏—Ç—å?"]
    jokes = ["–ú—É–∂—á–∏–Ω—É –ø–æ–π–º–∞–ª–∏ –∑–∞ –Ω–µ–∑–∞–∫–æ–Ω–Ω—É—é –≤—ã—Ä—É–±–∫—É –ª–µ—Å–∞ –∏ –ø—Ä–∏–≥–æ–≤–æ—Ä–∏–ª–∏ –∫ –ø—è—Ç–∏ –≥–æ–¥–∞–º –∑–∞–∫–æ–Ω–Ω–æ–π –≤—ã—Ä—É–±–∫–∏ –ª–µ—Å–∞.",
             "–£–ª—ã–±–∞–π—Å—è —á–∞—â–µ ‚Äî –∏ —á–∞—â–∞ —É–ª—ã–±–Ω—ë—Ç—Å—è —Ç–µ–±–µ!",
             "–î—É–ª —Å–∏–ª—å–Ω—ã–π –≤–µ—Ç–µ—Ä. –ò —á–µ–±—É—Ä–∞—à–∫–∞ –∑–≤–µ—Ä—Å–∫–∏ –±—ã–ª –∏–∑–±–∏—Ç —Å–≤–æ–∏–º–∏ —É—à–∞–º–∏..."]
    news = ["–ü—Ä–∏–∑—Ä–∞–∫–∏ —É–∫—Ä–∞–ª–∏ —Ä–µ–∑—é–º–µ –∂–µ–Ω—â–∏–Ω—ã. üëª",
            "–ê–º–µ—Ä–∏–∫–∞–Ω–µ—Ü –≥—Ä–æ–∑–∏–ª—Å—è —Å—ä–µ—Å—Ç—å –≤—Å–µ—Ö –ø–æ–ª–∏—Ü–µ–π—Å–∫–∏—Ö. üëÆ",
            "–ü–æ–ª–∏—Ü–µ–π—Å–∫–∏–µ –ø—Ä–∏–∫–∏–Ω—É–ª–∏—Å—å —Å–æ–±–∞–∫–∞–º–∏, —á—Ç–æ–±—ã –ø–æ–π–º–∞—Ç—å –≤–æ—Ä–æ–≤. üêï"]

    # command - answer
    if ("–ø—Ä–∏–≤" in request or "–∑–¥—Ä–∞–≤" in request
        or "–∫—É" in request or "—Ö–µ–ª" in request
        or "–¥–æ–±—Ä—ã–π" in request or "c–∞–ª—é—Ç" in request
        or "—Ö–∞–π" in request or "hello" in request):
        random_number = random.randint(0, 12)
        sayuser(this_user, hello[random_number])
    elif ("–ø–æ–∫–∞" in request or "–¥–æ —Å–≤–∏–¥" in request
        or "–±–∞–π" in request or "bye" in request):
        random_number = random.randint(0, 7)
        sayuser(this_user, bye[random_number])
    elif ("–≤—ã–∑–æ–≤" in request or "–∑–∞–∫–∞" in request):
        if ("—Ç–∞–∫—Å" in request or "–º–∞—à–∏–Ω" in request):
            # in developing
    elif ("–ø–æ–≥–æ–¥" in request or ("–ø–æ–≥–æ–¥" in last_request and "–∑–∞–≤—Ç—Ä" in request or "–Ω–µ–¥–µ–ª" in request)):
        if ("–∑–∞–≤—Ç—Ä" in request or "–Ω–µ–¥–µ–ª" in request):
            answer = "–ü–æ–¥—Ä–æ–±–Ω–µ–µ -> https://yandex.ru/pogoda/alexandrovskoe"
        else:
            random_number = random.randint(0, 2)
            get = requests.get("https://api.weather.yandex.ru/v1/informers?lat=" + lat
                               + "&lon=" + lon, headers={"X-Yandex-API-Key": ya_api_key})
            result = json.loads(get.text)
            answer = weather[random_number] + str(result['fact']['temp']) + "¬∞–° –ø–æ –¥–∞–Ω–Ω—ã–º –Ø–Ω–¥–µ–∫—Å.–ü–æ–≥–æ–¥—ã"
        sayuser(this_user, answer)
    elif ("—Å–∫–æ–ª—å–∫–æ" in request or "—Å–∫–æ–∫" in request):
        random_number = random.randint(0, 100)
        sayuser(this_user, random_number)
    elif ("—Å–ø—Å" in request or "—Å–ø–∞—Å–∏–±–æ" in request
        or "–±–ª–∞–≥–æ–¥–∞—Ä" in request or "–º–µ—Ä—Å–∏" in request):
        random_number = random.randint(0, 4)
        sayuser(this_user, thanks[random_number])
    elif ("–∫–æ–≥–¥–∞" in request or "–∫–∞–¥–∞" in request):
        random_number = random.randint(0, 4)
        sayuser(this_user, when[random_number])
    elif ("–≥–¥–µ" in request or "–±–ª–∏–∂" in request
        or "–¥–æ–π—Ç" in request):
        random_number = random.randint(0, 3)
        sayuser(this_user, where[random_number])
    elif ("–∫–∞–∫" in request):
        if ("–¥–µ–ª–∞" in request):
            random_number = random.randint(0, 5)
            sayuser(this_user, how_are_you_answer[random_number])
            random_number = random.randint(0, 1)
            sayuser(this_user, how_are_you_question[random_number])
        else:
            random_number = random.randint(0, 2)
            sayuser(this_user, how[random_number])
    elif ("—á—Ç–æ" in request):
        if ("–¥–µ–ª" in request):
            random_number = random.randint(0, 2)
            sayuser(this_user, what_are_you_doing[random_number])
        else:
            random_number = random.randint(0, 2)
            sayuser(this_user, what[random_number])
    elif ("—Ö–æ—Ä–æ—à" in request or "–∫—Ä—É—Ç" in request
        or "–∑–∞–º–µ—á" in request or "–ø—Ä–µ–≤–æ—Å" in request
        or "–∫–ª–∞—Å" in request or "—Å—É–ø–µ—Ä" in request):
        random_number = random.randint(0, 2)
        sayuser(this_user, good[random_number])
    elif ("–ø–ª–æ—Ö" in request or "—Ç–∞–∫ —Å–µ–±–µ" in request
        or "—É–∂–∞—Å" in request or "–æ—Ç–≤—Ä–∞—Ç" in request):
        random_number = random.randint(0, 2)
        sayuser(this_user, bad[random_number])
    elif ("–ª–µ—Ç" in request or "–≤–æ–∑—Ä–∞—Å—Ç" in request):
        random_number = random.randint(0, 2)
        sayuser(this_user, age[random_number])
    elif ("–∑–æ–≤" in request or "–∏–º—è" in request):
        random_number = random.randint(0, 8)
        sayuser(this_user, name[random_number])
    elif ("–∫–∞–∫–∞" in request or "–∫–∞–∫–∏" in request
        or "–∫–∞–∫–æ" in request):
        random_number = random.randint(0, 2)
        sayuser(this_user, any[random_number])
    elif ("–±–ª—è" in request or "—Ö—É–π" in request
        or "–ø–∏–∑–¥–∞" in request or "–µ–±–∞" in request
        or "–¥–µ–±–∏–ª" in request or "—Ç—É–ø" in request):
        random_number = random.randint(0, 2)
        sayuser(this_user, swear[random_number])
    elif ("–¥–∞" in request):
        random_number = random.randint(0, 4)
        sayuser(this_user, yes[random_number])
    elif ("–Ω–µ—Ç" in request):
        random_number = random.randint(0, 4)
        sayuser(this_user, no[random_number])
    elif ("–æ–∫" in request):
        random_number = random.randint(0, 2)
        sayuser(this_user, ok[random_number])
    else:
        print(request)
        random_number = random.randint(0, 11)
        sayuser(this_user, i_do_not_understand[random_number])

    last_request = request

ya_api_key = 'hidden'
vk_api_key = 'hidden'
vk = vk_api.VkApi(token=vk_api_key)
longpoll = VkLongPoll(vk)

for event in longpoll.listen():
    if event.type == VkEventType.MESSAGE_NEW:
        if event.to_me:
            this_user = event.user_id
            last_request = "None"
            user = vk.method("users.get", {"user_ids": this_user})
            name = user[0]['first_name']
            request = event.text
            request = request.lower()
            main(this_user, request)